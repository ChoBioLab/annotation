#!/bin/bash

set -euo pipefail # Set bash options to exit on error, unset variable or failed command in a pipeline

function on_failure {
  echo "The script" "${0##*/}" "has failed" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
}

trap on_failure ERR # Set a trap to call the on_failure function if an error occurs
source src/getopts # Source the getopts script to parse command line options
APP_PATH=$(pwd -P) # Get the absolute path of the current working directory

if [[ -z "${INPUT:-}" || -z "${MODEL:-}" ]]
then
  echo "ERROR: Both INPUT (-i) and MODEL (-m) arguments must be provided" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
  exit 1
fi

SUFFIX="${MODEL##*.}"
TIMESTAMP=$(date +"%Y-%m-%d_%H.%M.%S") # Get the current date and time in a specific format
ANN_OUT_DIR="output/output_$TIMESTAMP" # Set the output directory path
mkdir -p "$ANN_OUT_DIR" "$ANN_OUT_DIR"/tmp # Create the output and temporary directories

echo ""
echo "Housekeeping complete" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

# Executing matrix conversion
singularity run \
  --no-home \
  --pwd "$APP_PATH" \
  -B "$APP_PATH":"$APP_PATH" \
  -B "${INPUT}":"${INPUT}" \
  docker://public.ecr.aws/chobiolab/seurat-base:v4-r2 \
  Rscript "$APP_PATH"/src/matrix-convert.R \
  "$APP_PATH"/"$ANN_OUT_DIR"/tmp \
  "${INPUT}" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt

echo ""
echo "Counts sparse matrix to expression matrix conversion complete" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

# Executing celltypist
if [[ -f "${MODEL}" ]]
then
  MODEL_FILE="${MODEL##*/}"
  MODEL_PATH="${MODEL%/*}"
  singularity run \
    -B "$APP_PATH":/data \
    -B "${MODEL_PATH}":/opt/celltypist/data/models \
    docker://quay.io/teichlab/celltypist:latest \
    celltypist \
    --indata /data/"$ANN_OUT_DIR"/tmp/counts.csv \
    --model "${MODEL_FILE}" \
    --outdir /data/"$ANN_OUT_DIR" \
    --majority-voting 2>&1 \
    | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
else
  singularity run \
    -B "$APP_PATH":/data \
    docker://quay.io/teichlab/celltypist:latest \
    celltypist \
    --indata /data/"$ANN_OUT_DIR"/tmp/counts.csv \
    --model "${MODEL}".pkl \
    --outdir /data/"$ANN_OUT_DIR" \
    --majority-voting 2>&1 \
    | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
fi

echo ""
echo "CellTypist annotation prediction complete" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

# Executing application of predicted labels back onto input object
singularity run \
  --no-home \
  --pwd "$APP_PATH" \
  -B "$APP_PATH":"$APP_PATH" \
  -B "${INPUT}":"${INPUT}" \
  docker://public.ecr.aws/chobiolab/seurat-base:v4-r2 \
  Rscript "$APP_PATH"/src/apply-ann.R \
  "$APP_PATH"/"$ANN_OUT_DIR" \
  "${INPUT}" \
  "$WORKERS" \
  "$RAM" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt

echo ""
echo "Application of predicted labels back onto input object complete" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

singularity run \
  --no-home \
  --pwd "$APP_PATH" \
  -B "$APP_PATH":"$APP_PATH" \
  docker://public.ecr.aws/chobiolab/seurat-base:v4-r2 \
  Rscript "$APP_PATH"/src/qc.R \
  "$APP_PATH"/"$ANN_OUT_DIR" \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt

echo ""
echo "QC metrics generated" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

rm -rf "$ANN_OUT_DIR"/tmp # Remove the temporary directory

echo ""
echo "Annotation routine complete" 2>&1 \
  | tee -a "$APP_PATH"/"$ANN_OUT_DIR"/celltypist-log.txt
echo ""

